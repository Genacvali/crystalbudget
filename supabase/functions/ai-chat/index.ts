import { serve } from "https://deno.land/std@0.168.0/http/server.ts";
import "https://deno.land/x/xhr@0.1.0/mod.ts";

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
};

serve(async (req) => {
  if (req.method === 'OPTIONS') {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const { messages } = await req.json();

    const OPENAI_API_KEY = Deno.env.get('OPENAI_API_KEY');

    if (!OPENAI_API_KEY) {
      throw new Error('OPENAI_API_KEY is not configured');
    }

    console.log('Processing chat request with', messages.length, 'messages');

    const tools = [
      {
        type: "function",
        function: {
          name: "create_category",
          description: "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ä–∞—Å—Ö–æ–¥–æ–≤",
          parameters: {
            type: "object",
            properties: {
              name: { type: "string", description: "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏" },
              icon: { type: "string", description: "–≠–º–æ–¥–∑–∏ –∏–∫–æ–Ω–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: üçî, üöó, üè†)" },
            },
            required: ["name", "icon"]
          }
        }
      },
      {
        type: "function",
        function: {
          name: "update_category",
          description: "–û–±–Ω–æ–≤–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ –∏–∫–æ–Ω–∫—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏",
          parameters: {
            type: "object",
            properties: {
              old_name: { type: "string", description: "–¢–µ–∫—É—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏" },
              new_name: { type: "string", description: "–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏" },
              icon: { type: "string", description: "–ù–æ–≤–∞—è —ç–º–æ–¥–∑–∏ –∏–∫–æ–Ω–∫–∞" },
            },
            required: ["old_name"]
          }
        }
      },
      {
        type: "function",
        function: {
          name: "delete_category",
          description: "–£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é",
          parameters: {
            type: "object",
            properties: {
              name: { type: "string", description: "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è" },
            },
            required: ["name"]
          }
        }
      },
      {
        type: "function",
        function: {
          name: "update_category_allocation",
          description: "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç –∏–ª–∏ –ª–∏–º–∏—Ç –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏",
          parameters: {
            type: "object",
            properties: {
              category_name: { type: "string", description: "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏" },
              allocation_percent: { type: "number", description: "–ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ç –¥–æ—Ö–æ–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 30 –¥–ª—è 30%)" },
              allocation_amount: { type: "number", description: "–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—É–º–º–∞ –ª–∏–º–∏—Ç–∞" },
            },
            required: ["category_name"]
          }
        }
      },
      {
        type: "function",
        function: {
          name: "create_income_source",
          description: "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–æ—Ö–æ–¥–∞",
          parameters: {
            type: "object",
            properties: {
              name: { type: "string", description: "–ù–∞–∑–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ó–∞—Ä–ø–ª–∞—Ç–∞, –§—Ä–∏–ª–∞–Ω—Å)" },
              amount: { type: "number", description: "–û–∂–∏–¥–∞–µ–º–∞—è —Å—É–º–º–∞ –¥–æ—Ö–æ–¥–∞" },
            },
            required: ["name"]
          }
        }
      },
      {
        type: "function",
        function: {
          name: "update_income_source",
          description: "–û–±–Ω–æ–≤–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ —Å—É–º–º—É –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–æ—Ö–æ–¥–∞",
          parameters: {
            type: "object",
            properties: {
              old_name: { type: "string", description: "–¢–µ–∫—É—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞" },
              new_name: { type: "string", description: "–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞" },
              amount: { type: "number", description: "–ù–æ–≤–∞—è –æ–∂–∏–¥–∞–µ–º–∞—è —Å—É–º–º–∞" },
            },
            required: ["old_name"]
          }
        }
      },
      {
        type: "function",
        function: {
          name: "delete_income_source",
          description: "–£–¥–∞–ª–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–æ—Ö–æ–¥–∞",
          parameters: {
            type: "object",
            properties: {
              name: { type: "string", description: "–ù–∞–∑–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è" },
            },
            required: ["name"]
          }
        }
      },
      {
        type: "function",
        function: {
          name: "add_expense",
          description: "–î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥",
          parameters: {
            type: "object",
            properties: {
              category_name: { type: "string", description: "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–∞" },
              amount: { type: "number", description: "–°—É–º–º–∞ —Ä–∞—Å—Ö–æ–¥–∞" },
              description: { type: "string", description: "–û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–∞" },
              date: { type: "string", description: "–î–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD" }
            },
            required: ["category_name", "amount"]
          }
        }
      },
      {
        type: "function",
        function: {
          name: "update_expense",
          description: "–û–±–Ω–æ–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥. –î–ª—è –ø–æ–∏—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ–ø–∏—Å–∞–Ω–∏–µ –∏–ª–∏ —Å—É–º–º–∞ –∏ –¥–∞—Ç–∞",
          parameters: {
            type: "object",
            properties: {
              description: { type: "string", description: "–û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞" },
              amount: { type: "number", description: "–°—É–º–º–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ (–µ—Å–ª–∏ –æ–ø–∏—Å–∞–Ω–∏—è –Ω–µ—Ç)" },
              date: { type: "string", description: "–î–∞—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD" },
              new_amount: { type: "number", description: "–ù–æ–≤–∞—è —Å—É–º–º–∞ —Ä–∞—Å—Ö–æ–¥–∞" },
              new_description: { type: "string", description: "–ù–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ" },
              new_category_name: { type: "string", description: "–ù–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è" },
            },
            required: []
          }
        }
      },
      {
        type: "function",
        function: {
          name: "delete_expense",
          description: "–£–¥–∞–ª–∏—Ç—å —Ä–∞—Å—Ö–æ–¥. –î–ª—è –ø–æ–∏—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ–ø–∏—Å–∞–Ω–∏–µ –∏–ª–∏ —Å—É–º–º–∞ –∏ –¥–∞—Ç–∞",
          parameters: {
            type: "object",
            properties: {
              description: { type: "string", description: "–û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–∞" },
              amount: { type: "number", description: "–°—É–º–º–∞ —Ä–∞—Å—Ö–æ–¥–∞" },
              date: { type: "string", description: "–î–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD" },
            },
            required: []
          }
        }
      },
      {
        type: "function",
        function: {
          name: "add_income",
          description: "–î–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥",
          parameters: {
            type: "object",
            properties: {
              source_name: { type: "string", description: "–ù–∞–∑–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–æ—Ö–æ–¥–∞" },
              amount: { type: "number", description: "–°—É–º–º–∞ –¥–æ—Ö–æ–¥–∞" },
              description: { type: "string", description: "–û–ø–∏—Å–∞–Ω–∏–µ –¥–æ—Ö–æ–¥–∞" },
              date: { type: "string", description: "–î–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD" }
            },
            required: ["source_name", "amount"]
          }
        }
      },
      {
        type: "function",
        function: {
          name: "update_income",
          description: "–û–±–Ω–æ–≤–∏—Ç—å –¥–æ—Ö–æ–¥. –î–ª—è –ø–æ–∏—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ–ø–∏—Å–∞–Ω–∏–µ –∏–ª–∏ —Å—É–º–º–∞ –∏ –¥–∞—Ç–∞",
          parameters: {
            type: "object",
            properties: {
              description: { type: "string", description: "–û–ø–∏—Å–∞–Ω–∏–µ –¥–æ—Ö–æ–¥–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞" },
              amount: { type: "number", description: "–°—É–º–º–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞" },
              date: { type: "string", description: "–î–∞—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD" },
              new_amount: { type: "number", description: "–ù–æ–≤–∞—è —Å—É–º–º–∞ –¥–æ—Ö–æ–¥–∞" },
              new_description: { type: "string", description: "–ù–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ" },
              new_source_name: { type: "string", description: "–ù–æ–≤—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫" },
            },
            required: []
          }
        }
      },
      {
        type: "function",
        function: {
          name: "delete_income",
          description: "–£–¥–∞–ª–∏—Ç—å –¥–æ—Ö–æ–¥. –î–ª—è –ø–æ–∏—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ–ø–∏—Å–∞–Ω–∏–µ –∏–ª–∏ —Å—É–º–º–∞ –∏ –¥–∞—Ç–∞",
          parameters: {
            type: "object",
            properties: {
              description: { type: "string", description: "–û–ø–∏—Å–∞–Ω–∏–µ –¥–æ—Ö–æ–¥–∞" },
              amount: { type: "number", description: "–°—É–º–º–∞ –¥–æ—Ö–æ–¥–∞" },
              date: { type: "string", description: "–î–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD" },
            },
            required: []
          }
        }
      }
    ];

    const response = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${OPENAI_API_KEY}`,
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        model: 'gpt-4o-mini',
        messages: [
          {
            role: 'system',
            content: '–¢—ã - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫ –∏ –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –±—é–¥–∂–µ—Ç–æ–º. –¢—ã –º–æ–∂–µ—à—å —Å–æ–∑–¥–∞–≤–∞—Ç—å, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ —É–¥–∞–ª—è—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–æ—Ö–æ–¥–∞, –¥–æ—Ö–æ–¥—ã –∏ —Ä–∞—Å—Ö–æ–¥—ã, –∞ —Ç–∞–∫–∂–µ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç—ã –∏ –ª–∏–º–∏—Ç—ã –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π. –ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å–∏—Ç —Å–æ–∑–¥–∞—Ç—å, –∏–∑–º–µ–Ω–∏—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å —á—Ç–æ-—Ç–æ, –∏—Å–ø–æ–ª—å–∑—É–π –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã. –í–ê–ñ–ù–û: —Ç—ã –ù–ï –º–æ–∂–µ—à—å –∏–∑–º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–µ–º—å–∏ –∏–ª–∏ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É, –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.'
          },
          ...messages
        ],
        tools,
        tool_choice: "auto",
        max_completion_tokens: 2000,
        stream: true,
      }),
    });

    if (!response.ok) {
      if (response.status === 429) {
        return new Response(
          JSON.stringify({ error: '–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.' }),
          { status: 429, headers: { ...corsHeaders, 'Content-Type': 'application/json' } }
        );
      }
      if (response.status === 402) {
        return new Response(
          JSON.stringify({ error: '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ OpenAI.' }),
          { status: 402, headers: { ...corsHeaders, 'Content-Type': 'application/json' } }
        );
      }
      const errorText = await response.text();
      console.error('AI gateway error:', response.status, errorText);
      throw new Error('–û—à–∏–±–∫–∞ OpenAI API');
    }

    return new Response(response.body, {
      headers: {
        ...corsHeaders,
        'Content-Type': 'text/event-stream',
        'Cache-Control': 'no-cache',
        'Connection': 'keep-alive',
      },
    });
  } catch (error) {
    console.error('Chat error:', error);
    return new Response(
      JSON.stringify({ error: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞' }),
      { status: 500, headers: { ...corsHeaders, 'Content-Type': 'application/json' } }
    );
  }
});
